name: Release

on:
  push:
    tags:
      - "v*" # Run when tag matches v*, for example v1.0.0

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: loco-pilot ${{ github.ref_name }}
          draft: false
          prerelease: false

  build-and-upload:
    name: Build and Upload
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            asset_name: loco-pilot-${{ github.ref_name }}-linux-amd64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            asset_name: loco-pilot-${{ github.ref_name }}-linux-arm64
          - os: macos-latest
            target: x86_64-apple-darwin
            asset_name: loco-pilot-${{ github.ref_name }}-macos-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            asset_name: loco-pilot-${{ github.ref_name }}-macos-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            asset_name: loco-pilot-${{ github.ref_name }}-windows-amd64.exe
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target }}

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Prepare asset (Unix)
        if: runner.os != 'Windows'
        run: |
          cp target/${{ matrix.target }}/release/loco-pilot ${{ matrix.asset_name }}
          chmod +x ${{ matrix.asset_name }}
          gzip -c ${{ matrix.asset_name }} > ${{ matrix.asset_name }}.gz

      - name: Prepare asset (Windows)
        if: runner.os == 'Windows'
        run: |
          copy target\${{ matrix.target }}\release\loco-pilot.exe ${{ matrix.asset_name }}
          Compress-Archive -Path ${{ matrix.asset_name }} -DestinationPath ${{ matrix.asset_name }}.zip

      - name: Upload Release Asset (Unix)
        if: runner.os != 'Windows'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ matrix.asset_name }}.gz
          asset_name: ${{ matrix.asset_name }}.gz
          asset_content_type: application/gzip

      - name: Upload Release Asset (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ matrix.asset_name }}.zip
          asset_name: ${{ matrix.asset_name }}.zip
          asset_content_type: application/zip